/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedSettingsImport } from './routes/_authenticated/settings'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authPrincipalSignUpImport } from './routes/(auth)/principal-sign-up'
import { Route as authPrincipalSignInImport } from './routes/(auth)/principal-sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authInsurerSignUpImport } from './routes/(auth)/insurer-sign-up'
import { Route as authInsurerSignInImport } from './routes/(auth)/insurer-sign-in'
import { Route as authBeneficiarySignUpImport } from './routes/(auth)/beneficiary-sign-up'
import { Route as authBeneficiarySignInImport } from './routes/(auth)/beneficiary-sign-in'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as AuthenticatedInsurerIndexImport } from './routes/_authenticated/insurer/index'
import { Route as authOnboardingIndexImport } from './routes/(auth)/onboarding/index'
import { Route as AuthenticatedInsurerUnderwritingImport } from './routes/_authenticated/insurer/underwriting'
import { Route as AuthenticatedInsurerPremiumsImport } from './routes/_authenticated/insurer/premiums'
import { Route as AuthenticatedInsurerClaimsImport } from './routes/_authenticated/insurer/claims'
import { Route as AuthenticatedInsurerApprovalsImport } from './routes/_authenticated/insurer/approvals'
import { Route as AuthenticatedInsurerAnalyticsImport } from './routes/_authenticated/insurer/analytics'
import { Route as errors403PageImport } from './routes/(errors)/403/page'
import { Route as errors401PageImport } from './routes/(errors)/401/page'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authKycLazyImport = createFileRoute('/(auth)/kyc')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const authConsentLazyImport = createFileRoute('/(auth)/consent')()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedProfileIndexLazyImport = createFileRoute(
  '/_authenticated/profile/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const AuthenticatedPrincipalRenewalsIndexLazyImport = createFileRoute(
  '/_authenticated/principal/renewals/',
)()
const AuthenticatedPrincipalDocumentsIndexLazyImport = createFileRoute(
  '/_authenticated/principal/documents/',
)()
const AuthenticatedPrincipalClaimsIndexLazyImport = createFileRoute(
  '/_authenticated/principal/claims/',
)()
const AuthenticatedPrincipalBondsIndexLazyImport = createFileRoute(
  '/_authenticated/principal/bonds/',
)()
const AuthenticatedPrincipalApplicationsIndexLazyImport = createFileRoute(
  '/_authenticated/principal/applications/',
)()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authKycLazyRoute = authKycLazyImport
  .update({
    id: '/(auth)/kyc',
    path: '/kyc',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/kyc.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const authConsentLazyRoute = authConsentLazyImport
  .update({
    id: '/(auth)/consent',
    path: '/consent',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/consent.lazy').then((d) => d.Route))

const AuthenticatedSettingsRoute = AuthenticatedSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any).lazy(() =>
  import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authPrincipalSignUpRoute = authPrincipalSignUpImport.update({
  id: '/(auth)/principal-sign-up',
  path: '/principal-sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authPrincipalSignInRoute = authPrincipalSignInImport.update({
  id: '/(auth)/principal-sign-in',
  path: '/principal-sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const authInsurerSignUpRoute = authInsurerSignUpImport.update({
  id: '/(auth)/insurer-sign-up',
  path: '/insurer-sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authInsurerSignInRoute = authInsurerSignInImport.update({
  id: '/(auth)/insurer-sign-in',
  path: '/insurer-sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authBeneficiarySignUpRoute = authBeneficiarySignUpImport.update({
  id: '/(auth)/beneficiary-sign-up',
  path: '/beneficiary-sign-up',
  getParentRoute: () => rootRoute,
} as any)

const authBeneficiarySignInRoute = authBeneficiarySignInImport.update({
  id: '/(auth)/beneficiary-sign-in',
  path: '/beneficiary-sign-in',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedProfileIndexLazyRoute =
  AuthenticatedProfileIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedProfileRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/profile/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedInsurerIndexRoute = AuthenticatedInsurerIndexImport.update({
  id: '/insurer/',
  path: '/insurer/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const authOnboardingIndexRoute = authOnboardingIndexImport
  .update({
    id: '/(auth)/onboarding/',
    path: '/onboarding/',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/onboarding/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedInsurerUnderwritingRoute =
  AuthenticatedInsurerUnderwritingImport.update({
    id: '/insurer/underwriting',
    path: '/insurer/underwriting',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInsurerPremiumsRoute =
  AuthenticatedInsurerPremiumsImport.update({
    id: '/insurer/premiums',
    path: '/insurer/premiums',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInsurerClaimsRoute = AuthenticatedInsurerClaimsImport.update(
  {
    id: '/insurer/claims',
    path: '/insurer/claims',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedInsurerApprovalsRoute =
  AuthenticatedInsurerApprovalsImport.update({
    id: '/insurer/approvals',
    path: '/insurer/approvals',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedInsurerAnalyticsRoute =
  AuthenticatedInsurerAnalyticsImport.update({
    id: '/insurer/analytics',
    path: '/insurer/analytics',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const errors403PageRoute = errors403PageImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => errors403LazyRoute,
} as any)

const errors401PageRoute = errors401PageImport.update({
  id: '/page',
  path: '/page',
  getParentRoute: () => errors401LazyRoute,
} as any)

const AuthenticatedPrincipalRenewalsIndexLazyRoute =
  AuthenticatedPrincipalRenewalsIndexLazyImport.update({
    id: '/principal/renewals/',
    path: '/principal/renewals/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/principal/renewals/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedPrincipalDocumentsIndexLazyRoute =
  AuthenticatedPrincipalDocumentsIndexLazyImport.update({
    id: '/principal/documents/',
    path: '/principal/documents/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/principal/documents/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedPrincipalClaimsIndexLazyRoute =
  AuthenticatedPrincipalClaimsIndexLazyImport.update({
    id: '/principal/claims/',
    path: '/principal/claims/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/principal/claims/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedPrincipalBondsIndexLazyRoute =
  AuthenticatedPrincipalBondsIndexLazyImport.update({
    id: '/principal/bonds/',
    path: '/principal/bonds/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/principal/bonds/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedPrincipalApplicationsIndexLazyRoute =
  AuthenticatedPrincipalApplicationsIndexLazyImport.update({
    id: '/principal/applications/',
    path: '/principal/applications/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/principal/applications/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/beneficiary-sign-in': {
      id: '/(auth)/beneficiary-sign-in'
      path: '/beneficiary-sign-in'
      fullPath: '/beneficiary-sign-in'
      preLoaderRoute: typeof authBeneficiarySignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/beneficiary-sign-up': {
      id: '/(auth)/beneficiary-sign-up'
      path: '/beneficiary-sign-up'
      fullPath: '/beneficiary-sign-up'
      preLoaderRoute: typeof authBeneficiarySignUpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/insurer-sign-in': {
      id: '/(auth)/insurer-sign-in'
      path: '/insurer-sign-in'
      fullPath: '/insurer-sign-in'
      preLoaderRoute: typeof authInsurerSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/insurer-sign-up': {
      id: '/(auth)/insurer-sign-up'
      path: '/insurer-sign-up'
      fullPath: '/insurer-sign-up'
      preLoaderRoute: typeof authInsurerSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/principal-sign-in': {
      id: '/(auth)/principal-sign-in'
      path: '/principal-sign-in'
      fullPath: '/principal-sign-in'
      preLoaderRoute: typeof authPrincipalSignInImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/principal-sign-up': {
      id: '/(auth)/principal-sign-up'
      path: '/principal-sign-up'
      fullPath: '/principal-sign-up'
      preLoaderRoute: typeof authPrincipalSignUpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/consent': {
      id: '/(auth)/consent'
      path: '/consent'
      fullPath: '/consent'
      preLoaderRoute: typeof authConsentLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/kyc': {
      id: '/(auth)/kyc'
      path: '/kyc'
      fullPath: '/kyc'
      preLoaderRoute: typeof authKycLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(errors)/401/page': {
      id: '/(errors)/401/page'
      path: '/page'
      fullPath: '/401/page'
      preLoaderRoute: typeof errors401PageImport
      parentRoute: typeof errors401LazyImport
    }
    '/(errors)/403/page': {
      id: '/(errors)/403/page'
      path: '/page'
      fullPath: '/403/page'
      preLoaderRoute: typeof errors403PageImport
      parentRoute: typeof errors403LazyImport
    }
    '/_authenticated/insurer/analytics': {
      id: '/_authenticated/insurer/analytics'
      path: '/insurer/analytics'
      fullPath: '/insurer/analytics'
      preLoaderRoute: typeof AuthenticatedInsurerAnalyticsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/insurer/approvals': {
      id: '/_authenticated/insurer/approvals'
      path: '/insurer/approvals'
      fullPath: '/insurer/approvals'
      preLoaderRoute: typeof AuthenticatedInsurerApprovalsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/insurer/claims': {
      id: '/_authenticated/insurer/claims'
      path: '/insurer/claims'
      fullPath: '/insurer/claims'
      preLoaderRoute: typeof AuthenticatedInsurerClaimsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/insurer/premiums': {
      id: '/_authenticated/insurer/premiums'
      path: '/insurer/premiums'
      fullPath: '/insurer/premiums'
      preLoaderRoute: typeof AuthenticatedInsurerPremiumsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/insurer/underwriting': {
      id: '/_authenticated/insurer/underwriting'
      path: '/insurer/underwriting'
      fullPath: '/insurer/underwriting'
      preLoaderRoute: typeof AuthenticatedInsurerUnderwritingImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/(auth)/onboarding/': {
      id: '/(auth)/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof authOnboardingIndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/insurer/': {
      id: '/_authenticated/insurer/'
      path: '/insurer'
      fullPath: '/insurer'
      preLoaderRoute: typeof AuthenticatedInsurerIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/'
      fullPath: '/profile/'
      preLoaderRoute: typeof AuthenticatedProfileIndexLazyImport
      parentRoute: typeof AuthenticatedProfileImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/principal/applications/': {
      id: '/_authenticated/principal/applications/'
      path: '/principal/applications'
      fullPath: '/principal/applications'
      preLoaderRoute: typeof AuthenticatedPrincipalApplicationsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/principal/bonds/': {
      id: '/_authenticated/principal/bonds/'
      path: '/principal/bonds'
      fullPath: '/principal/bonds'
      preLoaderRoute: typeof AuthenticatedPrincipalBondsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/principal/claims/': {
      id: '/_authenticated/principal/claims/'
      path: '/principal/claims'
      fullPath: '/principal/claims'
      preLoaderRoute: typeof AuthenticatedPrincipalClaimsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/principal/documents/': {
      id: '/_authenticated/principal/documents/'
      path: '/principal/documents'
      fullPath: '/principal/documents'
      preLoaderRoute: typeof AuthenticatedPrincipalDocumentsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/principal/renewals/': {
      id: '/_authenticated/principal/renewals/'
      path: '/principal/renewals'
      fullPath: '/principal/renewals'
      preLoaderRoute: typeof AuthenticatedPrincipalRenewalsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedProfileRouteChildren {
  AuthenticatedProfileIndexLazyRoute: typeof AuthenticatedProfileIndexLazyRoute
}

const AuthenticatedProfileRouteChildren: AuthenticatedProfileRouteChildren = {
  AuthenticatedProfileIndexLazyRoute: AuthenticatedProfileIndexLazyRoute,
}

const AuthenticatedProfileRouteWithChildren =
  AuthenticatedProfileRoute._addFileChildren(AuthenticatedProfileRouteChildren)

interface AuthenticatedSettingsRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteChildren: AuthenticatedSettingsRouteChildren = {
  AuthenticatedSettingsAccountLazyRoute: AuthenticatedSettingsAccountLazyRoute,
  AuthenticatedSettingsAppearanceLazyRoute:
    AuthenticatedSettingsAppearanceLazyRoute,
  AuthenticatedSettingsDisplayLazyRoute: AuthenticatedSettingsDisplayLazyRoute,
  AuthenticatedSettingsNotificationsLazyRoute:
    AuthenticatedSettingsNotificationsLazyRoute,
  AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
}

const AuthenticatedSettingsRouteWithChildren =
  AuthenticatedSettingsRoute._addFileChildren(
    AuthenticatedSettingsRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRouteWithChildren
  AuthenticatedSettingsRoute: typeof AuthenticatedSettingsRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedInsurerAnalyticsRoute: typeof AuthenticatedInsurerAnalyticsRoute
  AuthenticatedInsurerApprovalsRoute: typeof AuthenticatedInsurerApprovalsRoute
  AuthenticatedInsurerClaimsRoute: typeof AuthenticatedInsurerClaimsRoute
  AuthenticatedInsurerPremiumsRoute: typeof AuthenticatedInsurerPremiumsRoute
  AuthenticatedInsurerUnderwritingRoute: typeof AuthenticatedInsurerUnderwritingRoute
  AuthenticatedInsurerIndexRoute: typeof AuthenticatedInsurerIndexRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedPrincipalApplicationsIndexLazyRoute: typeof AuthenticatedPrincipalApplicationsIndexLazyRoute
  AuthenticatedPrincipalBondsIndexLazyRoute: typeof AuthenticatedPrincipalBondsIndexLazyRoute
  AuthenticatedPrincipalClaimsIndexLazyRoute: typeof AuthenticatedPrincipalClaimsIndexLazyRoute
  AuthenticatedPrincipalDocumentsIndexLazyRoute: typeof AuthenticatedPrincipalDocumentsIndexLazyRoute
  AuthenticatedPrincipalRenewalsIndexLazyRoute: typeof AuthenticatedPrincipalRenewalsIndexLazyRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedProfileRoute: AuthenticatedProfileRouteWithChildren,
  AuthenticatedSettingsRoute: AuthenticatedSettingsRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedInsurerAnalyticsRoute: AuthenticatedInsurerAnalyticsRoute,
  AuthenticatedInsurerApprovalsRoute: AuthenticatedInsurerApprovalsRoute,
  AuthenticatedInsurerClaimsRoute: AuthenticatedInsurerClaimsRoute,
  AuthenticatedInsurerPremiumsRoute: AuthenticatedInsurerPremiumsRoute,
  AuthenticatedInsurerUnderwritingRoute: AuthenticatedInsurerUnderwritingRoute,
  AuthenticatedInsurerIndexRoute: AuthenticatedInsurerIndexRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedPrincipalApplicationsIndexLazyRoute:
    AuthenticatedPrincipalApplicationsIndexLazyRoute,
  AuthenticatedPrincipalBondsIndexLazyRoute:
    AuthenticatedPrincipalBondsIndexLazyRoute,
  AuthenticatedPrincipalClaimsIndexLazyRoute:
    AuthenticatedPrincipalClaimsIndexLazyRoute,
  AuthenticatedPrincipalDocumentsIndexLazyRoute:
    AuthenticatedPrincipalDocumentsIndexLazyRoute,
  AuthenticatedPrincipalRenewalsIndexLazyRoute:
    AuthenticatedPrincipalRenewalsIndexLazyRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface errors401LazyRouteChildren {
  errors401PageRoute: typeof errors401PageRoute
}

const errors401LazyRouteChildren: errors401LazyRouteChildren = {
  errors401PageRoute: errors401PageRoute,
}

const errors401LazyRouteWithChildren = errors401LazyRoute._addFileChildren(
  errors401LazyRouteChildren,
)

interface errors403LazyRouteChildren {
  errors403PageRoute: typeof errors403PageRoute
}

const errors403LazyRouteChildren: errors403LazyRouteChildren = {
  errors403PageRoute: errors403PageRoute,
}

const errors403LazyRouteWithChildren = errors403LazyRoute._addFileChildren(
  errors403LazyRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/beneficiary-sign-in': typeof authBeneficiarySignInRoute
  '/beneficiary-sign-up': typeof authBeneficiarySignUpRoute
  '/insurer-sign-in': typeof authInsurerSignInRoute
  '/insurer-sign-up': typeof authInsurerSignUpRoute
  '/otp': typeof authOtpRoute
  '/principal-sign-in': typeof authPrincipalSignInRoute
  '/principal-sign-up': typeof authPrincipalSignUpRoute
  '/sign-in': typeof authSignInRoute
  '/profile': typeof AuthenticatedProfileRouteWithChildren
  '/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/consent': typeof authConsentLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/kyc': typeof authKycLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRouteWithChildren
  '/403': typeof errors403LazyRouteWithChildren
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/401/page': typeof errors401PageRoute
  '/403/page': typeof errors403PageRoute
  '/insurer/analytics': typeof AuthenticatedInsurerAnalyticsRoute
  '/insurer/approvals': typeof AuthenticatedInsurerApprovalsRoute
  '/insurer/claims': typeof AuthenticatedInsurerClaimsRoute
  '/insurer/premiums': typeof AuthenticatedInsurerPremiumsRoute
  '/insurer/underwriting': typeof AuthenticatedInsurerUnderwritingRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/onboarding': typeof authOnboardingIndexRoute
  '/insurer': typeof AuthenticatedInsurerIndexRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/profile/': typeof AuthenticatedProfileIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/principal/applications': typeof AuthenticatedPrincipalApplicationsIndexLazyRoute
  '/principal/bonds': typeof AuthenticatedPrincipalBondsIndexLazyRoute
  '/principal/claims': typeof AuthenticatedPrincipalClaimsIndexLazyRoute
  '/principal/documents': typeof AuthenticatedPrincipalDocumentsIndexLazyRoute
  '/principal/renewals': typeof AuthenticatedPrincipalRenewalsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/500': typeof errors500LazyRoute
  '/beneficiary-sign-in': typeof authBeneficiarySignInRoute
  '/beneficiary-sign-up': typeof authBeneficiarySignUpRoute
  '/insurer-sign-in': typeof authInsurerSignInRoute
  '/insurer-sign-up': typeof authInsurerSignUpRoute
  '/otp': typeof authOtpRoute
  '/principal-sign-in': typeof authPrincipalSignInRoute
  '/principal-sign-up': typeof authPrincipalSignUpRoute
  '/sign-in': typeof authSignInRoute
  '/consent': typeof authConsentLazyRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/kyc': typeof authKycLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRouteWithChildren
  '/403': typeof errors403LazyRouteWithChildren
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/401/page': typeof errors401PageRoute
  '/403/page': typeof errors403PageRoute
  '/insurer/analytics': typeof AuthenticatedInsurerAnalyticsRoute
  '/insurer/approvals': typeof AuthenticatedInsurerApprovalsRoute
  '/insurer/claims': typeof AuthenticatedInsurerClaimsRoute
  '/insurer/premiums': typeof AuthenticatedInsurerPremiumsRoute
  '/insurer/underwriting': typeof AuthenticatedInsurerUnderwritingRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/onboarding': typeof authOnboardingIndexRoute
  '/insurer': typeof AuthenticatedInsurerIndexRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/profile': typeof AuthenticatedProfileIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/principal/applications': typeof AuthenticatedPrincipalApplicationsIndexLazyRoute
  '/principal/bonds': typeof AuthenticatedPrincipalBondsIndexLazyRoute
  '/principal/claims': typeof AuthenticatedPrincipalClaimsIndexLazyRoute
  '/principal/documents': typeof AuthenticatedPrincipalDocumentsIndexLazyRoute
  '/principal/renewals': typeof AuthenticatedPrincipalRenewalsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/beneficiary-sign-in': typeof authBeneficiarySignInRoute
  '/(auth)/beneficiary-sign-up': typeof authBeneficiarySignUpRoute
  '/(auth)/insurer-sign-in': typeof authInsurerSignInRoute
  '/(auth)/insurer-sign-up': typeof authInsurerSignUpRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/principal-sign-in': typeof authPrincipalSignInRoute
  '/(auth)/principal-sign-up': typeof authPrincipalSignUpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRouteWithChildren
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteWithChildren
  '/(auth)/consent': typeof authConsentLazyRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/kyc': typeof authKycLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRouteWithChildren
  '/(errors)/403': typeof errors403LazyRouteWithChildren
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/(errors)/401/page': typeof errors401PageRoute
  '/(errors)/403/page': typeof errors403PageRoute
  '/_authenticated/insurer/analytics': typeof AuthenticatedInsurerAnalyticsRoute
  '/_authenticated/insurer/approvals': typeof AuthenticatedInsurerApprovalsRoute
  '/_authenticated/insurer/claims': typeof AuthenticatedInsurerClaimsRoute
  '/_authenticated/insurer/premiums': typeof AuthenticatedInsurerPremiumsRoute
  '/_authenticated/insurer/underwriting': typeof AuthenticatedInsurerUnderwritingRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/(auth)/onboarding/': typeof authOnboardingIndexRoute
  '/_authenticated/insurer/': typeof AuthenticatedInsurerIndexRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/principal/applications/': typeof AuthenticatedPrincipalApplicationsIndexLazyRoute
  '/_authenticated/principal/bonds/': typeof AuthenticatedPrincipalBondsIndexLazyRoute
  '/_authenticated/principal/claims/': typeof AuthenticatedPrincipalClaimsIndexLazyRoute
  '/_authenticated/principal/documents/': typeof AuthenticatedPrincipalDocumentsIndexLazyRoute
  '/_authenticated/principal/renewals/': typeof AuthenticatedPrincipalRenewalsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/500'
    | '/beneficiary-sign-in'
    | '/beneficiary-sign-up'
    | '/insurer-sign-in'
    | '/insurer-sign-up'
    | '/otp'
    | '/principal-sign-in'
    | '/principal-sign-up'
    | '/sign-in'
    | '/profile'
    | '/settings'
    | '/consent'
    | '/forgot-password'
    | '/kyc'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/401/page'
    | '/403/page'
    | '/insurer/analytics'
    | '/insurer/approvals'
    | '/insurer/claims'
    | '/insurer/premiums'
    | '/insurer/underwriting'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/onboarding'
    | '/insurer'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/profile/'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/principal/applications'
    | '/principal/bonds'
    | '/principal/claims'
    | '/principal/documents'
    | '/principal/renewals'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/500'
    | '/beneficiary-sign-in'
    | '/beneficiary-sign-up'
    | '/insurer-sign-in'
    | '/insurer-sign-up'
    | '/otp'
    | '/principal-sign-in'
    | '/principal-sign-up'
    | '/sign-in'
    | '/consent'
    | '/forgot-password'
    | '/kyc'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/401/page'
    | '/403/page'
    | '/insurer/analytics'
    | '/insurer/approvals'
    | '/insurer/claims'
    | '/insurer/premiums'
    | '/insurer/underwriting'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/onboarding'
    | '/insurer'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/profile'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/principal/applications'
    | '/principal/bonds'
    | '/principal/claims'
    | '/principal/documents'
    | '/principal/renewals'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/500'
    | '/(auth)/beneficiary-sign-in'
    | '/(auth)/beneficiary-sign-up'
    | '/(auth)/insurer-sign-in'
    | '/(auth)/insurer-sign-up'
    | '/(auth)/otp'
    | '/(auth)/principal-sign-in'
    | '/(auth)/principal-sign-up'
    | '/(auth)/sign-in'
    | '/_authenticated/profile'
    | '/_authenticated/settings'
    | '/(auth)/consent'
    | '/(auth)/forgot-password'
    | '/(auth)/kyc'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/'
    | '/(errors)/401/page'
    | '/(errors)/403/page'
    | '/_authenticated/insurer/analytics'
    | '/_authenticated/insurer/approvals'
    | '/_authenticated/insurer/claims'
    | '/_authenticated/insurer/premiums'
    | '/_authenticated/insurer/underwriting'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/(auth)/onboarding/'
    | '/_authenticated/insurer/'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/profile/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/principal/applications/'
    | '/_authenticated/principal/bonds/'
    | '/_authenticated/principal/claims/'
    | '/_authenticated/principal/documents/'
    | '/_authenticated/principal/renewals/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authBeneficiarySignInRoute: typeof authBeneficiarySignInRoute
  authBeneficiarySignUpRoute: typeof authBeneficiarySignUpRoute
  authInsurerSignInRoute: typeof authInsurerSignInRoute
  authInsurerSignUpRoute: typeof authInsurerSignUpRoute
  authOtpRoute: typeof authOtpRoute
  authPrincipalSignInRoute: typeof authPrincipalSignInRoute
  authPrincipalSignUpRoute: typeof authPrincipalSignUpRoute
  authSignInRoute: typeof authSignInRoute
  authConsentLazyRoute: typeof authConsentLazyRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authKycLazyRoute: typeof authKycLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRouteWithChildren
  errors403LazyRoute: typeof errors403LazyRouteWithChildren
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  authOnboardingIndexRoute: typeof authOnboardingIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  auth500Route: auth500Route,
  authBeneficiarySignInRoute: authBeneficiarySignInRoute,
  authBeneficiarySignUpRoute: authBeneficiarySignUpRoute,
  authInsurerSignInRoute: authInsurerSignInRoute,
  authInsurerSignUpRoute: authInsurerSignUpRoute,
  authOtpRoute: authOtpRoute,
  authPrincipalSignInRoute: authPrincipalSignInRoute,
  authPrincipalSignUpRoute: authPrincipalSignUpRoute,
  authSignInRoute: authSignInRoute,
  authConsentLazyRoute: authConsentLazyRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authKycLazyRoute: authKycLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRouteWithChildren,
  errors403LazyRoute: errors403LazyRouteWithChildren,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  authOnboardingIndexRoute: authOnboardingIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/(auth)/500",
        "/(auth)/beneficiary-sign-in",
        "/(auth)/beneficiary-sign-up",
        "/(auth)/insurer-sign-in",
        "/(auth)/insurer-sign-up",
        "/(auth)/otp",
        "/(auth)/principal-sign-in",
        "/(auth)/principal-sign-up",
        "/(auth)/sign-in",
        "/(auth)/consent",
        "/(auth)/forgot-password",
        "/(auth)/kyc",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(auth)/onboarding/"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/profile",
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/insurer/analytics",
        "/_authenticated/insurer/approvals",
        "/_authenticated/insurer/claims",
        "/_authenticated/insurer/premiums",
        "/_authenticated/insurer/underwriting",
        "/_authenticated/insurer/",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/principal/applications/",
        "/_authenticated/principal/bonds/",
        "/_authenticated/principal/claims/",
        "/_authenticated/principal/documents/",
        "/_authenticated/principal/renewals/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/beneficiary-sign-in": {
      "filePath": "(auth)/beneficiary-sign-in.tsx"
    },
    "/(auth)/beneficiary-sign-up": {
      "filePath": "(auth)/beneficiary-sign-up.tsx"
    },
    "/(auth)/insurer-sign-in": {
      "filePath": "(auth)/insurer-sign-in.tsx"
    },
    "/(auth)/insurer-sign-up": {
      "filePath": "(auth)/insurer-sign-up.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/principal-sign-in": {
      "filePath": "(auth)/principal-sign-in.tsx"
    },
    "/(auth)/principal-sign-up": {
      "filePath": "(auth)/principal-sign-up.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/profile/"
      ]
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(auth)/consent": {
      "filePath": "(auth)/consent.lazy.tsx"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/kyc": {
      "filePath": "(auth)/kyc.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx",
      "children": [
        "/(errors)/401/page"
      ]
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx",
      "children": [
        "/(errors)/403/page"
      ]
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/(errors)/401/page": {
      "filePath": "(errors)/401/page.tsx",
      "parent": "/(errors)/401"
    },
    "/(errors)/403/page": {
      "filePath": "(errors)/403/page.tsx",
      "parent": "/(errors)/403"
    },
    "/_authenticated/insurer/analytics": {
      "filePath": "_authenticated/insurer/analytics.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/insurer/approvals": {
      "filePath": "_authenticated/insurer/approvals.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/insurer/claims": {
      "filePath": "_authenticated/insurer/claims.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/insurer/premiums": {
      "filePath": "_authenticated/insurer/premiums.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/insurer/underwriting": {
      "filePath": "_authenticated/insurer/underwriting.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/(auth)/onboarding/": {
      "filePath": "(auth)/onboarding/index.tsx"
    },
    "/_authenticated/insurer/": {
      "filePath": "_authenticated/insurer/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/profile/": {
      "filePath": "_authenticated/profile/index.lazy.tsx",
      "parent": "/_authenticated/profile"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/principal/applications/": {
      "filePath": "_authenticated/principal/applications/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/principal/bonds/": {
      "filePath": "_authenticated/principal/bonds/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/principal/claims/": {
      "filePath": "_authenticated/principal/claims/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/principal/documents/": {
      "filePath": "_authenticated/principal/documents/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/principal/renewals/": {
      "filePath": "_authenticated/principal/renewals/index.lazy.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
